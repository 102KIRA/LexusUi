--// Connections
local GetService = game.GetService
local Connect = game.Loaded.Connect
local Wait = game.Loaded.Wait

if (not game:IsLoaded()) then
    local Loaded = game.Loaded
    Loaded.Wait(Loaded)
end

--// Important 
local Setup = {
    Keybind = Enum.KeyCode.LeftControl,
    Size = UDim2.new(0, 400, 0, 300),
}

local Theme = {
    Primary = Color3.fromRGB(30, 30, 30),
    Secondary = Color3.fromRGB(35, 35, 35),
    Component = Color3.fromRGB(40, 40, 40),
    Interactables = Color3.fromRGB(45, 45, 45),
    Title = Color3.fromRGB(240, 240, 240),
    Description = Color3.fromRGB(200, 200, 200),
}

--// Services
local LocalPlayer = GetService(game, "Players").LocalPlayer
local Services = {
    Input = GetService(game, "UserInputService"),
}

local Player = {
    GUI = LocalPlayer.PlayerGui,
}

local SetProperty = function(Object: Instance, Properties: {})
    for Index, Property in next, Properties do
        Object[Index] = (Property)
    end
    return Object
end

--// Custom UI Setup
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "EnhancedUI"
ScreenGui.Parent = game.CoreGui

local Library = {}

function Library:CreateWindow(Settings: { Title: string, Size: UDim2 })
    -- Main Window (Frame)
    local Window = Instance.new("Frame")
    Window.Name = "Main"
    Window.Size = Settings.Size or Setup.Size
    Window.Position = UDim2.new(0.5, -Window.Size.X.Offset / 2, 0.5, -Window.Size.Y.Offset / 2)
    Window.BackgroundColor3 = Theme.Primary
    Window.BorderSizePixel = 0
    Window.Parent = ScreenGui

    -- Top Bar (Frame for control buttons and icon)
    local TopBar = Instance.new("Frame")
    TopBar.Name = "Top"
    TopBar.Size = UDim2.new(1, 0, 0, 30)
    TopBar.BackgroundColor3 = Theme.Secondary
    TopBar.BorderSizePixel = 0
    TopBar.Parent = Window

    -- Icon (optional decal for window)
    local Icon = Instance.new("ImageLabel")
    Icon.Name = "Icon"
    Icon.Size = UDim2.new(0, 20, 0, 20)
    Icon.Position = UDim2.new(0, 5, 0.5, -10)
    Icon.BackgroundTransparency = 1
    Icon.Image = ""
    Icon.ImageColor3 = Theme.Title
    Icon.Parent = TopBar

    -- Buttons Frame (for control buttons)
    local ButtonsFrame = Instance.new("Frame")
    ButtonsFrame.Name = "Buttons"
    ButtonsFrame.Size = UDim2.new(0, 90, 1, 0)
    ButtonsFrame.Position = UDim2.new(1, -90, 0, 0)
    ButtonsFrame.BackgroundTransparency = 1
    ButtonsFrame.Parent = TopBar

    local ButtonsLayout = Instance.new("UIListLayout")
    ButtonsLayout.FillDirection = Enum.FillDirection.Horizontal
    ButtonsLayout.HorizontalAlignment = Enum.HorizontalAlignment.Right
    ButtonsLayout.VerticalAlignment = Enum.VerticalAlignment.Center
    ButtonsLayout.Padding = UDim.new(0, 5)
    ButtonsLayout.Parent = ButtonsFrame

    -- Content Area (ScrollingFrame for components)
    local Content = Instance.new("ScrollingFrame")
    Content.Name = "Content"
    Content.Size = UDim2.new(1, 0, 1, -30)
    Content.Position = UDim2.new(0, 0, 0, 30)
    Content.BackgroundColor3 = Theme.Primary
    Content.BorderSizePixel = 0
    Content.ScrollBarThickness = 5
    Content.ScrollBarImageColor3 = Theme.Component
    Content.CanvasSize = UDim2.new(0, 0, 0, 0)
    Content.AutomaticCanvasSize = Enum.AutomaticSize.Y
    Content.Parent = Window

    local ContentLayout = Instance.new("UIListLayout")
    ContentLayout.SortOrder = Enum.SortOrder.LayoutOrder
    ContentLayout.Padding = UDim.new(0, 5)
    ContentLayout.Parent = Content

    local ContentPadding = Instance.new("UIPadding")
    ContentPadding.PaddingTop = UDim.new(0, 5)
    ContentPadding.PaddingLeft = UDim.new(0, 5)
    ContentPadding.PaddingRight = UDim.new(0, 5)
    ContentPadding.Parent = Content

    local Options = {}
    local Opened = true
    local Maximized = false

    -- Create Control Buttons
    local function CreateControlButton(Name, Text, Color)
        local Button = Instance.new("TextButton")
        Button.Name = Name
        Button.Size = UDim2.new(0, 20, 0, 20)
        Button.BackgroundColor3 = Color
        Button.Text = Text
        Button.TextColor3 = Color3.fromRGB(255, 255, 255)
        Button.TextSize = 14
        Button.Font = Enum.Font.SourceSansBold
        Button.BorderSizePixel = 0
        Button.Parent = ButtonsFrame
        return Button
    end

    local MinimizeButton = CreateControlButton("Minimize", "-", Color3.fromRGB(0, 255, 0)) -- Green
    local MaximizeButton = CreateControlButton("Maximize", "â–¡", Color3.fromRGB(255, 165, 0)) -- Orange
    local CloseButton = CreateControlButton("Close", "x", Color3.fromRGB(255, 0, 0)) -- Red

    -- Control Button Handlers
    for Index, Button in next, ButtonsFrame:GetChildren() do
        if Button:IsA("TextButton") then
            local Name = Button.Name
            Connect(Button.MouseButton1Click, function() 
                if Name == "Close" then
                    Window.Visible = false
                elseif Name == "Maximize" then
                    if Maximized then
                        Maximized = false
                        Window.Size = Setup.Size
                        Window.Position = UDim2.new(0.5, -Window.Size.X.Offset / 2, 0.5, -Window.Size.Y.Offset / 2)
                    else
                        Maximized = true
                        Window.Size = UDim2.fromScale(1, 1)
                        Window.Position = UDim2.fromScale(0.5, 0.5)
                    end
                elseif Name == "Minimize" then
                    Opened = false
                    Window.Visible = false
                end
            end)
        end
    end

    -- Keybind to toggle window visibility
    Services.Input.InputBegan:Connect(function(Input, Focused) 
        if (Input.KeyCode == Setup.Keybind) and not Focused then
            if Opened then
                Opened = false
                Window.Visible = false
            else
                Opened = true
                Window.Visible = true
            end
        end
    end)

    -- Component Functions
    function Options:AddButton(Settings: { Title: string, Description: string, Callback: any }) 
        local Button = Instance.new("TextButton")
        Button.Size = UDim2.new(1, -10, 0, 50)
        Button.BackgroundColor3 = Theme.Component
        Button.Text = ""
        Button.Parent = Content

        local Labels = Instance.new("Frame")
        Labels.Name = "Labels"
        Labels.Size = UDim2.new(1, 0, 1, 0)
        Labels.BackgroundTransparency = 1
        Labels.Parent = Button

        local Title = Instance.new("TextLabel")
        Title.Name = "Title"
        Title.Size = UDim2.new(1, 0, 0, 20)
        Title.BackgroundTransparency = 1
        Title.Text = Settings.Title
        Title.TextColor3 = Theme.Title
        Title.TextSize = 16
        Title.Font = Enum.Font.SourceSansBold
        Title.TextXAlignment = Enum.TextXAlignment.Left
        Title.Parent = Labels

        local Description = Instance.new("TextLabel")
        Description.Name = "Description"
        Description.Size = UDim2.new(1, 0, 0, 20)
        Description.Position = UDim2.new(0, 0, 0, 20)
        Description.BackgroundTransparency = 1
        Description.Text = Settings.Description
        Description.TextColor3 = Theme.Description
        Description.TextSize = 14
        Description.Font = Enum.Font.SourceSans
        Description.TextXAlignment = Enum.TextXAlignment.Left
        Description.TextWrapped = true
        Description.Parent = Labels

        Connect(Button.MouseButton1Click, Settings.Callback)
    end

    function Options:AddToggle(Settings: { Title: string, Description: string, Default: boolean, Callback: any }) 
        local Toggle = Instance.new("TextButton")
        Toggle.Size = UDim2.new(1, -10, 0, 50)
        Toggle.BackgroundColor3 = Theme.Component
        Toggle.Text = ""
        Toggle.Parent = Content

        local Labels = Instance.new("Frame")
        Labels.Name = "Labels"
        Labels.Size = UDim2.new(1, -40, 1, 0)
        Labels.BackgroundTransparency = 1
        Labels.Parent = Toggle

        local Title = Instance.new("TextLabel")
        Title.Name = "Title"
        Title.Size = UDim2.new(1, 0, 0, 20)
        Title.BackgroundTransparency = 1
        Title.Text = Settings.Title
        Title.TextColor3 = Theme.Title
        Title.TextSize = 16
        Title.Font = Enum.Font.SourceSansBold
        Title.TextXAlignment = Enum.TextXAlignment.Left
        Title.Parent = Labels

        local Description = Instance.new("TextLabel")
        Description.Name = "Description"
        Description.Size = UDim2.new(1, 0, 0, 20)
        Description.Position = UDim2.new(0, 0, 0, 20)
        Description.BackgroundTransparency = 1
        Description.Text = Settings.Description
        Description.TextColor3 = Theme.Description
        Description.TextSize = 14
        Description.Font = Enum.Font.SourceSans
        Description.TextXAlignment = Enum.TextXAlignment.Left
        Description.TextWrapped = true
        Description.Parent = Labels

        local On = Instance.new("BoolValue")
        On.Name = "Value"
        On.Value = Settings.Default
        On.Parent = Toggle

        local Main = Instance.new("Frame")
        Main.Name = "Main"
        Main.Size = UDim2.new(0, 30, 0, 14)
        Main.Position = UDim2.new(1, -30, 0.5, -7)
        Main.BackgroundTransparency = 1
        Main.Parent = Toggle

        local ToggleImage = Instance.new("ImageLabel")
        ToggleImage.Name = "ToggleImage"
        ToggleImage.Size = UDim2.new(0, 30, 0, 14)
        ToggleImage.Position = UDim2.new(0, 0, 0, 0)
        ToggleImage.BackgroundTransparency = 1
        ToggleImage.Image = Settings.Default and "rbxassetid://105620223191972" or "rbxassetid://105490232180240"
        ToggleImage.Parent = Main

        local Set = function(Value)
            ToggleImage.Image = Value and "rbxassetid://105620223191972" or "rbxassetid://105490232180240"
            On.Value = Value
        end 

        Connect(Toggle.MouseButton1Click, function()
            local Value = not On.Value
            Set(Value)
            Settings.Callback(Value)
        end)

        Set(Settings.Default)
    end

    function Options:addIcon(DecalId: string)
        Icon.Image = DecalId
    end

    return Options
end

return Library
